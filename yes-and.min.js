"use strict";let yesAnd=function(t,a){try{let e=[];if((t&&"string"==typeof t&&!!t.length<1||"string"!=typeof t||!t)&&("string"==typeof t?e.push("You passed an empty string, expected an array/object accessor string."):e.push(`Type of argument 1 passed was ${typeof t}, expected a string.`)),a&&"object"==typeof a||(void 0===a?e.push("You didn't provide an options object for agument 2, expects an object with property rtnValue:true/false."):e.push(`Type of argument 2 was ${typeof a}, expects an object with property rtnValue:true/false.`)),a&&"boolean"!=typeof a.rtnValue&&(void 0===a.rtnValue?e.push("You didn't provide a rtnVal property in the object of argument 2, expects an object with property rtnValue:true/false."):e.push(`You provided a rtnValue value property with ${typeof a.rtnValue} data type in the object of argument 2, expects an object with property rtnValue:true/false.`)),1<=e.length)throw e;var p=t.split(/\.|(\[\d+\])|(\([^.]+\))/);if(0<(p=p?p.filter(e=>!!e):"").length){let t,r;for(let e=0;e<p.length;e++)0===e?(t="!!"+p[e],r=t):(t=t+" && "+r+(/\[\d+\]|(\(.*\))/.test(p[e])?p[e]:"."+p[e]),r+=/\[\d+\]|(\(\d*|\w*\))/.test(p[e])?p[e]:"."+p[e],e===p.length-1&&a.rtnValue&&(t=t+" && "+r.replaceAll("!","")));if(a?.wrap?.method&&a?.wrap?.target&&a?.wrap?.idx){let e=t.split("&&");e=e.map(e=>e.trim()).filter(e=>!!e);var n,o=a.wrap.target;a.wrap.idx;for(n in a.wrap.append&&(o="!!"+o,e.splice(a.wrap.idx,0,o)),e)parseInt(n)>=a.wrap.idx&&e[n]&&e.splice(n,1,`${/!/.test(e[n])?"!!":""}${a.wrap.method}(${e[n].substring(e[n].indexOf(a.wrap.target),e[n].indexOf(a.wrap.target)+a.wrap.target.length)})${e[n].substring(e[n].indexOf(a.wrap.target)+a.wrap.target.length,e[n].length)}`);t=e.reduce((e,t)=>e+" && "+t)}return t}throw`Something funky happened. KEYS LEN:${p.len}`}catch(t){if("object"==typeof t){let e="";for(var r in t)e=e?e+" "+t[r]:t[r];return e}}};module.exports=yesAnd;
"use strict";let yesAnd=function(t,a){try{let e=[];if((t&&"string"==typeof t&&!!t.length<1||"string"!=typeof t||!t)&&("string"==typeof t?e.push("You passed an empty string, expected an array/object accessor string."):e.push(`Type of argument 1 passed was ${typeof t}, expected a string.`)),a&&"object"==typeof a||(void 0===a?e.push("You didn't provide an options object for agument 2, expects an object with property rtnValue:true/false."):e.push(`Type of argument 2 was ${typeof a}, expects an object with property rtnValue:true/false.`)),a&&"boolean"!=typeof a.rtnValue&&(void 0===a.rtnValue?e.push("You didn't provide a rtnValue property in the object of argument 2, expects an object with property rtnValue:true/false."):e.push(`You provided a rtnValue value property with ${typeof a.rtnValue} data type in the object of argument 2, expects an object with property rtnValue:true/false.`)),1<=e.length)throw e;var p=t.split(/\.|(\[\d+\])|(\([^.]+\))/);if(0<(p=p?p.filter(e=>!!e):"").length){let r,t;for(let e=0;e<p.length;e++)0===e?(r="!!"+p[e],t=r):(r=r+" && "+t+(/\[\d+\]|(\(.*\))/.test(p[e])?p[e]:"."+p[e]),t+=/\[\d+\]|(\(\d*|\w*\))/.test(p[e])?p[e]:"."+p[e],e===p.length-1&&a.rtnValue&&(r=r+" && "+t.replaceAll("!","")));if(a?.wrap?.method&&a?.wrap?.target){let e=r.split("&&");e=e.map(e=>e.trim()).filter(e=>!!e);var n,o=a.wrap.target;let t=e.indexOf("!!"+o);for(n in a.wrap.append&&(o="!!"+o,e.splice(t,0,o),t=e.lastIndexOf(o)),e)parseInt(n)>=t&&e[n]&&e.splice(n,1,`${/!/.test(e[n])?"!!":""}${a.wrap.method}(${e[n].substring(e[n].indexOf(a.wrap.target),e[n].indexOf(a.wrap.target)+a.wrap.target.length)})${e[n].substring(e[n].indexOf(a.wrap.target)+a.wrap.target.length,e[n].length)}`);r=e.reduce((e,t)=>e+" && "+t)}return r}throw`Something funky happened. KEYS LEN:${p.len}`}catch(t){if("object"==typeof t){let e="";for(var r in t)e=e?e+" "+t[r]:t[r];return e}}};module.exports=yesAnd;
